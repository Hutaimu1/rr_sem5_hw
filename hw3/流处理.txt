
##一．    什么是流计算

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;从广义上说，所有大数据的生成均可以看作是一连串发生的离散事件。这些离散的事件以时间轴为维度进行观看就形成了一条条事件流/数据流。不同于传统的离线数据，

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;流数据是指由数千个数据源持续生成的数据，流数据通常也以数据记录的形式发送，但相较于离线数据，流数据普遍的规模较小。

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;流数据产生源头来自于源源不断的事件流，例如客户使用您的移动或 Web 应用程序生成的日志文件、网购数据、游戏内玩家活动、社交网站信息、金融交易大厅或地理空间服务，以及来自数据中心内所连接设备或仪器的遥测数据。

##二．    流计算的特点

* 实时(realtime)且无界(unbounded)的数据流

    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;流计算面对计算的 是实时且流式的，流数据是按照时间发生顺序地被流计算订阅和消费。且由于数据发生的持续性，数据流将长久且持续地集成进入流计算系统。例如，对于网站的访问点击日志流，只要网站不关闭其点击日志流将一直不停产生并进入流计算系统。因此，对于流系统而言，数据是实时且不终止(无界)的。

* 持续(continuos)且高效的计算

    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;流计算是一种”事件触发”的计算模式，触发源就是上述的无界流式数据。一旦有新的流数据进入流计算，流计算立刻发起并进行一次计算任务，因此整个流计算是持续进行的计算

* 流式(streaming)且实时的数据集成
    
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;流数据触发一次流计算的计算结果，可以被直接写入目的数据存储，例如将计算后的报表数据直接写入RDS进行报表展示。因此流数据的计算结果可以类似流式数据一样持续写入目的数据存储。

##三．    选择流计算的原因

* 在传统的数据处理流程中，总是先收集数据，然后将数据放到Database中，人们需要的时候通过DB对数据做query，得到答案。这样的一个流程隐含了两个前提：
    * data is old。当人们对DB做查询的时候，里面数据其实过去某一个时刻数据的一个snapshot，数据已经老了，可能已经过期了。
    * 这样的流程中，需要人们主动的发出query。也就是说，human active, DB passive。
    

* 但在某些时候，这两个前提都不存在。例如股票市场中，数据总是不断的产生，人们需要根据当前的数据实时的作出判断；并且，由于数据量太大，人们希望设定某种条件，当数据满足这些条件时系统能够主动的通知人并且自动的进行操作。在这种情况下，前提发生了变化：
    * 对data stream能够作出real-time response。
    * human passive, DB active。

##四．    常用的流计算框架

* IBM 的 StreamBase

    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StreamBase 是 IBM 开发的一款商业流式计算系统，在金融行业和政府部门使用。StreamBase 使用 Java 开发， IDE 是基于 Eclipse 进行二次开发，功能非常强大。 StreamBase也提供了相当多的 Operator、 Functor 以及其他组件来帮助构建应用程序。用户只需要通过 IDE拖拉控件，然后关联，设置好传输的 Schema 并且设置控件计算过程，就可以编译出一个高效处理的流式应用程序。同时， StreamBase 还提供了类 SQL 来描述计算过程。

* Yahoo 的 S42

    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Yahoo! S4（Simple Scalable Streaming System）是一个通用的、分布式的、可扩展的、分区容错的、可插拔的流式系统 。基于 S4 框架，开发者可以容易地开发面向持续流数据处理的应用。其设计特点有以下几个方面。
    * Actor 计算模型：为了能在普通机型构成的集群上进行分布式处理，并且在集群内部不使用共享内存， S4 架构采用了 Actor 模式，这种模式提供了封装和地址透明语义，因此在允许应用大规模并发的同时，提供了简单的编程接口。 S4 系统通过处理单元（Processing Elements， PEs）进行计算，消息在处理单元间以数据事件的形式传送，PE 消费事件，发出一个或多个可能被其他 PE 处理的事件，或者直接发布结果。每个PE 的状态对于其他 PE 不可见， PE 之间唯一的交互模式就是发出事件和消费事件。
    
    * 对等集群架构： S4 采用对等架构，集群中的所有处理节点都是等同的，没有中心控制节点，这使得集群的扩展性很好，处理节点的总数理论上无上限；同时， S4 没有单点容错的问题。
    
    * 可插拔体系架构： S4 系统使用 Java 语言开发，采用了极富层次的模块化编程，每个通用功能点都尽量抽象出来作为通用模块，而且尽可能地让各模块实现可定制化。
    
    * 支持部分容错：基于 ZooKeeper 服务的集群管理层会自动路由事件从失效节点到其他节点。除非显式保存到持久性存储，否则节点故障时，节点上处理事件的状态会丢失。
    
* Twitter 的 Rainbird

    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Rainbird 是一款分布式实时统计系统，可以用于实时数据的统计。  
    
    * 统计网站中每一个页面，域名的点击次数。
    * 内部系统的运行监控（统计被监控服务器的运行状态）。
    * 记录最大值和最小值。  
    
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Rainbird 构建在 Cassandra 上，使用 Scala 编写，依赖于 ZooKeeper、 Scribe 和 Thrift。每秒可以写入 10 万个事件，而且都带有层次结构，或者进行各种查询，延迟小于 100ms。目前 Twitter 已经在 Promoted Tweets、微博中的链接、短地址、每个用户的微博交互等生产环境使用了 Rainbird。
* 阿里的 JStorm

    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JStorm 是一个 Alibaba 开源的分布式实时计算引擎，可以认为是 Twitter Storm 的 Java版本，用户按照指定的接口实现一个任务，然后将这个任务递交给 JStorm 系统， JStorm 会启动后台服务进程 7×24 小时运行，一旦某个 Worker 发生故障，调度器立即分配一个新的Worker 替换这个失效的 Worker。  
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JStorm 处理数据的方式是基于消息的流水线处理，因此特别适合无状态计算，也就是计算单元依赖的数据全部可以在接受的消息中找到，并且最好一个数据流不依赖另外一个数据流。

##五．    总结  

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;流式计算作为一门热门技术，现在已经应用于各个领域，社交网站、博客、电子邮件、视频、新闻、电话记录、传输数据、电子感应器之中更是随处可见，可以满足其对数字格式的信息流进行快速处理并反馈的需求，同时也可以满足其对金融与科学计算当中的数据进行更快运算和分析的需求，本次作业中的kafka也是流式处理界的新贵，对流式处理有基本的了解对之后数据处理会有很大的帮助。
    
    